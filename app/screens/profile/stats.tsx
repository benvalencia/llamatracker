import {StyleSheet, Text, View} from 'react-native';
import {Colors} from "@/constants/Colors";
import {getProfileByUsername} from "@/app/services/fortniteClient/fortnite";
import {BRStatsByAccountIDResponseData} from "fnapicom/dist/src/http/autogeneratedEndpointStructs";
import {useEffect, useState} from "react";

export default function StatsScreen({route}: any) {

  const {fortniteUsername} = route.params;
  const [fortniteProfile, setFortniteProfile] = useState([{} as BRStatsByAccountIDResponseData])

  // let fortniteProfile: BRStatsByAccountIDResponseData = {} as BRStatsByAccountIDResponseData;

  useEffect(() => {
    searchProfile().then(res => {
      setFortniteProfile([res]);
    })
  });

  const searchProfile = async () => {
    console.log('-------- ', new Date())
    const profile = getProfileByUsername(fortniteUsername)

    return profile
    // await profile.then((res: BRStatsByAccountIDResponseData) => {
    //   console.log(res.data)
    //   fortniteProfile = res;
    //
    // })
  }

  // const getFortniteProfile = () => {
  //   return fortniteProfile;
  // }

  return (
    <View style={{
      backgroundColor: Colors.primary,
      height: '100%',
      flex: 1,
      alignItems: 'center',
      justifyContent: 'center'
    }}>
      {fortniteProfile && fortniteProfile[0].data === undefined
        ? <></>
        :
        <View>
          <Text>FortniteProfile</Text>
          <Text>ACCOUNT</Text>
          <Text>name: {fortniteProfile[0]?.data?.account?.name}</Text>
          <Text>id: {fortniteProfile[0]?.data?.account?.id}</Text>
          <Text>BATTLE PASS</Text>
          <Text>level: {fortniteProfile[0]?.data?.battlePass?.level}</Text>
          <Text>progress: {fortniteProfile[0]?.data?.battlePass?.progress}</Text>
          <Text>IMAGE</Text>
          <Text>image: {fortniteProfile[0]?.data?.image}</Text>
          <Text>STATS</Text>
          <Text>STATS - Overall</Text>
          <Text>score: {fortniteProfile[0]?.data?.stats?.all?.overall?.score}</Text>
          <Text>scorePerMin: {fortniteProfile[0]?.data?.stats?.all?.overall?.scorePerMin}</Text>
          <Text>scorePerMatch: {fortniteProfile[0]?.data?.stats?.all?.overall?.scorePerMatch}</Text>
          <Text>wins: {fortniteProfile[0]?.data?.stats?.all?.overall?.wins}</Text>
          <Text>top3: {fortniteProfile[0]?.data?.stats?.all?.overall?.top3}</Text>
          <Text>top5: {fortniteProfile[0]?.data?.stats?.all?.overall?.top5}</Text>
          <Text>top6: {fortniteProfile[0]?.data?.stats?.all?.overall?.top6}</Text>
          <Text>top10: {fortniteProfile[0]?.data?.stats?.all?.overall?.top10}</Text>
          <Text>top12: {fortniteProfile[0]?.data?.stats?.all?.overall?.top12}</Text>
          <Text>top25: {fortniteProfile[0]?.data?.stats?.all?.overall?.top25}</Text>
          <Text>top25: {fortniteProfile[0]?.data?.stats?.all?.overall?.kills}</Text>
          <Text>killsPerMin: {fortniteProfile[0]?.data?.stats?.all?.overall?.killsPerMin}</Text>
          <Text>killsPerMatch: {fortniteProfile[0]?.data?.stats?.all?.overall?.killsPerMatch}</Text>
          <Text>deaths: {fortniteProfile[0]?.data?.stats?.all?.overall?.deaths}</Text>
          <Text>deaths: {fortniteProfile[0]?.data?.stats?.all?.overall?.deaths}</Text>
          <Text>kd: {fortniteProfile[0]?.data?.stats?.all?.overall?.kd}</Text>
          <Text>matches: {fortniteProfile[0]?.data?.stats?.all?.overall?.matches}</Text>
          <Text>winRate: {fortniteProfile[0]?.data?.stats?.all?.overall?.winRate}</Text>
          <Text>minutesPlayed: {fortniteProfile[0]?.data?.stats?.all?.overall?.minutesPlayed}</Text>
          <Text>playersOutlived: {fortniteProfile[0]?.data?.stats?.all?.overall?.playersOutlived}</Text>
          <Text>lastModified: {fortniteProfile[0]?.data?.stats?.all?.overall?.lastModified}</Text>
        </View>
      }
    </View>
  );
}

const styles = StyleSheet.create({
  titleContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    gap: 8,
  },
  stepContainer: {
    gap: 8,
    marginBottom: 8,
  },
  reactLogo: {
    height: 178,
    width: 290,
    bottom: 0,
    left: 0,
    position: 'absolute',
  },
});
